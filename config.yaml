---
# General Hugo Configuration Options
# ==================================
title: "Basho Documentation"
baseURL: "https://docs.basho.com/"
languageCode: "en-us"

# Use YAML for front matter, rather than TOML
metaDataFormat: "yaml"

# Have Hugo generate `id`s for all header elements, without the default sha1
# string appended. This means that anchors will be unique to a page, but _not_
# to the site.
blackfriday:
  plainIDAnchors: true

# Ignore files (such as the reference links list) on build
ignoreFiles: [
    "\\_reference-links.md$",
  ]

# Default directory to build the completed site
publishdir: "public"

params:
  # Project Descriptions
  # ====================
  # These description elements lay out the what and where of projects, detailing
  # the name of the project, the version history (as far as the contemporary
  # docs are concerned), and the past and present location of the given project.
  #
  # These structures are somewhat frustrating, as we want to expose them to both
  # the Hugo generation logic, and live pages at load-time. This entails
  # duplicating the information both here (or in the data/ directory) for Hugo,
  # and somewhere in static/ to be read by the live pages. Assuming we don't
  # want to repeat ourselves and manually edit multiple files when updating this
  # information -- which we don't -- this will require us to use the below data
  # as a Source of Truth, and copy it out of this file.  
  # The way we do that is with `rake generate_versions_metadata`.
  #
  # The map should contain elements in the form,
  #
  #    <project_desc>:                          /* 1 */
  #      project_name: "<Title Name>"           /* 2 */
  #      project_name_html: '<HTML>'            /* 2 */
  #      path: "<path>"                         /* 3 */
  #      archived_path: "<path>"                /* 3 */
  #      releases:                              /* 4 */
  #        - ["<version>", "<version>", ...]
  #        - ["<version>", "<version>", ...]
  #      latest:        "<version>"             /* 5 */
  #      lts:           "<series>"              /* 6 */
  #      archived_url:  "<URI>"                 /* 7 */
  #
  # 1. The project descriptor must match some contents' `project:` front matter.
  #    This should be all lowercase with underscores for spaces---code, really.
  # 2. A reader-friendly project name and an HTML-friendly project title.  
  #    Spaces and caps are welcome in the name. ex; if the `project_desc` is
  #    `riak_kv`, the `project_name` Could be `"Riak KV"`.  
  #    The HTML is expected to be wrapped in a .product__title <div> with a logo
  #    icon prepended, so only the name of the product itself should be
  #    recorded. This is a very fragile element. See below for examples.  
  #    `project_name` is required.`project_name_html` is optional.  
  #    NB. Currently the areas that this title is used are spatially small. As
  #    such the titles should be kept below ~12 characters. "DataPlatform" is
  #    the text these elements were sized with.
  # 3. The `path` is the on-disk relative path from the content root. In Hugo,
  #    the content root is '/content/', on S3 the root is simply '/'.  
  #    If the project was moved from the Middleman site to Hugo, the
  #    `archived_path` is the on-disk relative path of the previous directory.  
  #    `path` is required. `archived_path` is optional. (Or should be?)
  #    TODO: `archived_path` should probably be optional. I don't believe it
  #           currently is.
  # 4. The `releases` list-of-lists is organized oldest to newest, grouped by
  #    release set (ex. the 2.0.* series is one list, followed b the 2.1.*
  #    series).  
  #    `releases` is required. Every release must have at least one `version`.
  # 5. `latest` is the current specific version that is currently att the head-
  #    of-development.  
  #    `latest` is required.
  # 6. `lts` is the Release Series (ex; "1.4", or "2.0", ect. -- it is expected
  #    to be the "X.Y" of a semantic "X.Y.Z" version string) that is currently
  #    held as the Long Term Support series.  
  #    `lts` is optional.
  # 7. If the project was moved from the Middleman site to Hugo, the
  #    `archived_url` is the URL to the newest of the deprecated pages.  
  #    `archived_url` is optional.
  project_descriptions:
    riak_kv:
      project_name: "Riak KV"
      project_name_html: 'Riak<span class="product__title-highlight">KV</span>'
      path: "/riak/kv"
      archived_path: "/riak"
      releases:
        - ["2.0.0", "2.0.1", "2.0.2", "2.0.4", "2.0.5", "2.0.6", "2.0.7"]
        - ["2.1.1", "2.1.3", "2.1.4"]
        - ["2.2.0"]
      latest: "2.2.0"
      lts: "2.0"
      archived_url: "http://docs.basho.com/riak/1.4.12/"
    riak_cs:
      project_name: "Riak CS"
      project_name_html: 'Riak<span class="product__title-highlight">CS</span>'
      path: "/riak/cs"
      archived_path: "/riakcs"
      releases:
        - ["2.0.0", "2.0.1"]
        - ["2.1.0", "2.1.1"]
      latest: "2.1.1"
      lts: "2.0"
      archived_url: "http://docs.basho.com/riakcs/1.5.4/"
    riak_ts:
      project_name: "Riak TS"
      project_name_html: 'Riak<span class="product__title-highlight">TS</span>'
      path: "/riak/ts"
      archived_path: "/riakts"
      releases:
        - ["1.0.0"]
        - ["1.1.0"]
        - ["1.2.0"]
        - ["1.3.0", "1.3.1"]
        - ["1.4.0"]
        - ["1.5.0", "1.5.1"]
      latest: "1.5.1"
    dataplatform:
      project_name: "DataPlatform"
      path: "/dataplatform"
      archived_path: "/dataplatform"
      releases:
        - ["1.0.0"]
      latest: "1.0.0"
---


#NOTE: Fun for debugging, we can drop this snippet in any partial/layout, and
# get a full listing of objects in the `.` context,
# {{ printf "%#v" . }}



# Below is a (no-longer) complete collection of options and their default values
#NOTE: Settings prepended with '???' may merit additional investigation,
#      because I'm not sure what they do. And I don't like not knowing.
##########
#     title:                      ""
#     baseURL:                    ""            # hostname (and path) to the root eg. http://spf13.com/
#     languageCode:               ""
#     theme:                      ""            # theme to use (located in /themes/THEMENAME/)
# ??? defaultLayout:              "post"
#
#     archetypedir:               "archetype"
#     contentdir:                 "content"
#     dataDir:                    "data"
#     layoutdir:                  "layouts"
#     staticdir:                  "static"
#     publishdir:                 "public"
# ??? destination:                ""            # filesystem path to write files to
# ??? source:                     ""            # filesystem path to read files relative from
#
#     uglyURLs:                   false         # if true, use /filename.html instead of /filename/
# ??? permalinks:
#
# ??? pygmentsStyle:              "monokai"     # color-cwodes for highlighting derived from this style
# ??? pygmentsUseClasses:         false         # true: use pygments-css or false: color-codes directly
#
#
#     buildDrafts:                false         # include content marked as draft
#     buildFuture:                false         # include content with publishdate in the future
#
#     watch:                      false         # watch filesystem for changes and recreate as needed
#     disableLiveReload:          false         #### I'm not sure if these are the same?
#
#     verbose:                    false         # verbose output
#     stepAnalysis:               false         # display memory and timing of different steps of the program
#     logFile:                    ""            # Log File path (if set, logging enabled automatically)
#     verboseLog:                 false         # verbose logging
#     log:                        false         # Enable Logging
#
#
# ??? sitemap:                                  # default sitemap configuration map
#     disableSitemap:             false         # Do not build Sitemap file
#
#     disableRSS:                 false         # Do not build RSS files
#
# ??? config:                     "config.toml" # config file (default is path/config.yaml|json|toml)
# ??? metaDataFormat:             "toml"        # "yaml", "toml", "json"
# ??? defaultExtension:           "html"
#
# ??? footnoteAnchorPrefix:       ""
# ??? footnoteReturnLinkContents: ""
#
# ??? noTimes:                    false         # Don't sync modification time of files
# ??? paginate:                   10
# ??? paginatePath:               "page"
#
# ??? pluralizeListTitles:        true          # Pluralize titles in lists using inflect
#
#
#     editor:                     ""            # edit new content with this editor, if provided
#     newContentEditor:           ""            #### How are these settings different?
#
