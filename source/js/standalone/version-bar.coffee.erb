$versions = <%= YAML::load(File.open('data/versions.yml')).to_json %>

$ ->
  # construct an object that represents a
  # drop-down version list
  buildLists = (project, base_url)->
    lists = []
    for vs in ($versions[project] || [])
      innerlists = []
      showV = null
      currentBlock = false
      active = false
      for vsi in vs
        vsp = parseVersion(vsi)
        if inVersionRange(vsp, range)
          current = window.compareVersions(currentVersion, vsp) == 0
          currentBlock ||= current
          active ||= true
          vData = {active:true, current:current, href:"/#{project}/#{vsi}#{base_url}", text:vsi}
          innerlists.push(vData)
          showV = vData if current
        else
          innerlists.push({active:false, current:false, href:"#", text:vsi})
      lists.push({active:active, current:currentBlock, show:(showV || innerlists[0]), inner:innerlists})
    lists


  return if $('.mainarticle .versions').length == 0

  project = $('meta[name=project]').attr('content')
  base_url = $('meta[name=base-url]').attr('content')
  version = $('meta[name=version]').attr('content')
  version_range = $('meta[name=version-range]').attr('content')

  return unless project? || base_url? || version? || version_range?
  return if $versions[project]?.length <= 1

  currentVersion = window.parseVersion(version)
  range = window.parseVersionRange(version_range)

  lists = buildLists(project, base_url)

  currentClass = (li)->
    unless li.active
      " class=\"inactive\""
    else
      if li.current then " class=\"current\"" else ""

  liLink = (li)->
    "<a class=\"versioned\" href=\"#{li.href}\">#{li.text}</a>"

  output = ""
  for vmli in lists
    output += "<li#{currentClass(vmli)}>"
    output += liLink(vmli.show)
    output += "<ol>"
    if vmli.inner?.length > 1
      for vpli in vmli.inner
        output += "<li#{currentClass(vpli)}>"
        output += liLink(vpli)
        output += "</li>"
    output += "</ol>"
    output += "</li>"


  $('.mainarticle .versions').html(output)

