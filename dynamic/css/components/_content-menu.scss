/**
 * Content Menu
 * This is assumed to be an unordered list-of-lists that will contain the
 * Hugo-generated menu for the given project.
 * 1. Override the default <ul> styles.
 * 2. Only add a border to the bottom of the first level of list items. We only
 *    want the top level items (those without a parents) visually separated.
 */
.content-menu {
  @extend %sans;
  margin-bottom : 0;     /* 1 */
  padding-left  : 0;     /* 1 */
  list-style    : none;  /* 1 */

  //TODO: Using <li> as the key selector might be expensive. But giving these
  //      list items a class just for a border bottoms sounds like a huge waste.
  > li {
    border-bottom : 1px solid $gray-lighter;  /* 2 */
  }
}



/**
 * Content Menu Item
 * These can be top level items, or sub-items.
 * 1. Apply this border here s.t. wrapped menu items get a border the full
 *    height of the title.
 */
.content-menu__item {
  padding-top    : 0.5rem;
  padding-bottom : 0.5rem;

  background : $gray-90;

  //TODO: Another expensive selector. Again, not really worth its own class.
  > a {
    border-right : 1px solid $gray-lighter;  /* 1 */
  }
}

/**
 * Container for a docs-icon iconograph.
 */
.content-menu__icon-container {
  width      : 2rem;
  text-align : right;
}

/**
 * Chevron toggle for showing the possibility of opening / closing a menu.
 * 1. We need to put something in the :after element for the chevron to render.
 */
.content-menu__menu-toggle {
  width      : 2.2rem;
  text-align : center;

  &:after {
    display : inline-block;
    content : "";            /* 1 */
    @include downward-arrow(p2r(10px), $gray-light);
  }

  &.content-menu__menu-toggle--open:after {
    @include leftward-arrow(p2r(10px), $gray-light);
  }
}
